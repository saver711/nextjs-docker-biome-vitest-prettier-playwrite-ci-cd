name: CI

on:
  pull_request:
    branches: [main, dev]

jobs:
  biome:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Biome
        uses: biomejs/setup-biome@v2
        with:
          version: latest
      - name: Run Biome
        run: biome ci --files-ignore-unknown=true .

  branch-name-check:
    runs-on: ubuntu-latest
    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

    steps:
      - name: Check branch name
        run: |
          echo "üîç Checking branch: $BRANCH_NAME"

          if [[ ! "$BRANCH_NAME" =~ ^(main|dev|[a-z]{2}-(fix|feat|chore|add)-[A-Z]+-[0-9]+-[a-z0-9-]+)$ ]]; then
            echo "‚ùå Invalid branch name: '$BRANCH_NAME'"
            echo "‚úÖ Allowed: main, dev, or xx-type-ABC-1234-description"
            exit 1
          fi

          echo "‚úÖ Branch name is valid: $BRANCH_NAME"

  commit-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/actions/setup
        with:
          install-deps: false

      - name: Install commitlint
        run: pnpm add -D @commitlint/cli @commitlint/config-conventional

      - name: Print versions
        run: |
          echo "git: $(git --version)"
          echo "node: $(node --version)"
          echo "pnpm: $(pnpm --version)"
          echo "commitlint: $(npx commitlint --version)"

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: npx commitlint --last --verbose

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

  tsc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup
        uses: ./.github/actions/setup

      - name: tsc
        run: pnpm tsc --noEmit --pretty false

  vitest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup
        uses: ./.github/actions/setup

      - name: Run Vitest
        run: pnpm vitest run --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: vitest-coverage
          path: coverage/
          retention-days: 30

  playwright:
    runs-on: ubuntu-latest
    needs: [biome, branch-name-check, commit-lint, tsc, vitest]
    if: |
      (github.event_name == 'push' && (github.ref_name == 'main' || github.ref_name == 'dev')) ||
      (github.event_name == 'pull_request' && (github.base_ref == 'main' || github.base_ref == 'dev'))
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup
        uses: ./.github/actions/setup

      - name: Cache Playwright Browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps

      - name: Run Playwrite
        run: pnpm playwright test

      - name: Upload Playwrite report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
